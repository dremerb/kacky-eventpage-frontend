name: NodeJS with Webpack

on:
  push:
    branches: 
      - development
      - main
  pull_request:

jobs:
  style:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
      - name: Dev dependencies
        run: npm install --save-dev
      - name: Check eslint
        run: npm run lint
      - name: Check prettier
        run: npm run prettier-check

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: latest
    - name: Install Modules
      run: npm install
    - name: Build
      run: npm run build
    - uses: actions/upload-artifact@master
      with:
        name: build_dir
        path: dist
    - name: List files
      run: ls -la
    - name: List files build
      run: ls -la dist
        
  deployment:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    steps:
      - uses: actions/download-artifact@master
        with:
          name: build_dir
          path: dist
      - name: List files
        run: ls -la
      - name: List files build
        run: ls -la dist
      - name: Set up SSH Key and use agent
        run: |
          eval `ssh-agent -s`
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | ssh-add -
          scp -r dist/* ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:development
      #- name: Copy files
      #  env:
      #    SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      #  run: scp -r dist/* ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:development
      - name: Deploy Production
        if: github.head_ref == 'main'
        run: |
          todo
